
#user  nobody;
user huanwanghuanwang huanwanghuanwang;
worker_processes  3;

#error_log /usr/local/nginx/logs/nginx_error.log crit;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
pid /run/nginx.pid;
worker_rlimit_nofile 65535;

events {
    use epoll;
    worker_connections  65535;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  'cid->"$connection", rip->"$remote_addr", rport->"$remote_port", mtime->"$msec", req->"$request", '
                      'bytes->"$body_bytes_sent", rtt->"$tcpinfo_rtt", hitFlag->"$upstream_cache_status"';

    server_names_hash_bucket_size 128;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;
	client_max_body_size 8m;
	access_log  /home/huanwanghuanwang/nginx/logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive   100;
    keepalive_timeout 60;
	tcp_nodelay on;
	fastcgi_connect_timeout 300;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;
	fastcgi_buffer_size 64k;
	fastcgi_buffers 4 64k;
	fastcgi_busy_buffers_size 128k;
	fastcgi_temp_file_write_size 128k;
	fastcgi_cache_revalidate on;
		
	proxy_cache_path /home/huanwanghuanwang/nginx/ngcache keys_zone=ts_cache:10m max_size=2g inactive=24h use_temp_path=off;
    #gzip  on;
	upstream eastCloud{
		server 206.167.183.202;
		keepalive 5;
	}

	upstream arbutusCloud{
	
		server 206.12.91.168;
		keepalive 5;
	}

	upstream googljpCloud{
		server 35.243.89.232;
		keepalive 5;
	}
    
	server {
        listen       80;
        server_name  localhost;
		index index.html index.htm
        #charset koi8-r;
        #access_log  logs/host.access.log  main;
		#root /usr/local/webserver/nginx/html;
        #
        error_page   500 502 503 504  /50x.html;
		
		# clean up cache on nginx
		proxy_http_version 1.1;
		proxy_cache ts_cache;
		proxy_ignore_headers Cache-Control; # please note that if this directive(ignore) is not set, than parameters in the http response header has higher priority than the proxy_cache_valid directive.
		proxy_cache_valid 200 304 35d;
		proxy_cache_valid any 10m;
		proxy_set_header Cache-Control no-cache;
		proxy_set_header Cache-Control no-store;
		proxy_set_header Connection "";
		add_header  Nginx-Cache "$upstream_cache_status";
		#proxy_buffering on;
		#proxy_buffers	32 4m;
		#add_header 'Access-Control-Allow-Origin' '*';
		#add_header Cache-Control no-cache;

        location ~ /1010qwoeiuryfg/.*\.ts$ {
			proxy_pass http://qthttp.apple.com.edgesuite.net;
			limit_rate	2m;
			#add_header 'Access-Control-Allow-Origin' '*';
		}
		
		location ~ /east/.*\.ts$ {
			proxy_pass http://eastCloud;
			limit_rate	8m;
			add_header 'Access-Control-Allow-Origin' '*';
		}
		
		location ~ /arbutus/.*\.ts$ {
			proxy_pass http://arbutusCloud;
			limit_rate	8m;
			add_header 'Access-Control-Allow-Origin' '*';
		}

		location ~ /googljp/.*\.ts$ {
			proxy_pass http://googljpCloud;
			limit_rate 8m;
			add_header 'Access-Control-Allow-Origin' '*';
		
		}

		#location ~ /purge(/.*){
			#allow              127.0.0.1;
			#deny               all;
			#proxy_cache_purge ts_cache $1$is_args$args;
		#}

		location = /50x.html {
            		root   html;
        	}
		
		location ~ \.(m3u8)$ {
			root /home/huanwanghuanwang/nginx/m3u8;
			add_header 'Access-Control-Allow-Origin' '*';
		}


	
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
